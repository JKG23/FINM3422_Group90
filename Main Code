import pandas as pd
from fpdf import FPDF
from datetime import date
import os
import yfinance as yf
import matplotlib.pyplot as plt
import numpy as np
import cairosvg
import requests
import functions
from PIL import Image
from bs4 import BeautifulSoup

# Initialize the PDF object
pdf = FPDF(orientation='P', unit='mm', format='A4')

# Set up the font and add the first page
pdf.set_font('Arial',)
pdf.add_page()

# Add a colored header background
pdf.set_fill_color(202, 164, 94)  # Gold-like color
pdf.rect(0, 0, 210, 45, 'F')  # Rectangle spans the width of the page

# Add the current date in white text
pdf.set_text_color(255, 255, 255)
pdf.set_font('Arial', 'I', 9)
pdf.cell(200, 10, date.today().strftime("%d %B %Y"), ln=True)

# Add the report title
pdf.set_font('Arial', 'B', 16)
pdf.ln(2)
pdf.cell(200, 10, 'HMC Capital Equity Research Report', ln=True)

# Download and embed the HMC Capital logo
svg_url = "https://www.hmccapital.com.au/themes/bs5/images/HMC-Capital-logo.svg"
response = requests.get(svg_url)

if response.status_code == 200:
    with open("HMC_Capital_logo.svg", "wb") as f:
        f.write(response.content)
    cairosvg.svg2png(url="HMC_Capital_logo.svg", write_to="HMC_Capital_logo.png")
    pdf.image("HMC_Capital_logo.png", x=125, y=10, w=75)
    print("PDF created with converted SVG logo!")
else:
    print("Failed to download SVG logo.")

# Add authors' names
pdf.set_font('Arial', '', 9)
pdf.ln(2)
pdf.cell(200, 10, 'By Flynn Hubbard, Jay Gills, Kirrtanya Tandon and Joshua Gray', ln=True)

# Reset text color to black for the main content
pdf.set_text_color(0, 0, 0)

# Add "Company Overview" section
pdf.ln(6)
pdf.set_font('Arial', 'B', 16)
pdf.cell(200, 10, 'Company Overview', ln=True)

# Add the company description
pdf.set_font('Arial', '', 9)
company_overview = """
HMC Capital Limited (ASX: HMC) is a leading Australian alternative asset manager, specializing in high-conviction real asset strategies. Since rebranding from Home Consortium in 2021, it has rapidly expanded its funds under management to over $18.5Bn, focusing on real estate, private equity, private credit, energy transition, and digital infrastructure.
"""
pdf.multi_cell(95, 5, company_overview)

# Align the "Analyst Price Targets" section to the right
pdf.set_xy(110, pdf.get_y() - 30)
pdf.set_font('Arial', 'B', 16)
pdf.set_xy(105, pdf.get_y() - 10)
pdf.set_text_color(202, 164, 94)
pdf.cell(95, 5, 'BUY', ln=True, align='R')
pdf.set_text_color(0, 0, 0)

# Add price target details
pdf.set_font('Arial', '', 9)
price_targets = """
Stock Code: ASX:HMC
Price (as of 10/4/25): A$4.68
Price Target: A$9.00
Upside: 92.31%
Dividend yield: 2.56%
GICS Sector: Financials
"""
pdf.set_x(105)
pdf.multi_cell(95, 5, price_targets, align='R')

# Add "Industry Overview" section
pdf.ln(10)
pdf.set_font('Arial', 'B', 16)
pdf.cell(200, 10, 'Industry Overview', ln=True)

# Add industry description
pdf.set_font('Arial', '', 9)
industry_overview = """
The alternative asset management industry has grown rapidly in recent years, driven by rising demand for diversification, higher returns, and protection against market swings. This sector, which includes real estate, private equity, infrastructure, and energy transition, is popular for its stable returns and long-term growth. Institutional investors, like pension funds and sovereign wealth funds, are increasingly shifting capital towards alternatives as traditional assets offer lower yields. ESG investing is also reshaping the industry, with firms incorporating sustainability into their strategies. Despite challenges like market volatility and competition, the industry offers strong growth opportunities, especially for firms focusing on emerging areas like digital infrastructure and renewable energy.
"""
pdf.multi_cell(0, 5, industry_overview)

# Add "DCF Output" section and read data from a CSV file
pdf.ln(10)
pdf.set_font('Arial', 'B', 16)
pdf.cell(200, 10, 'DCF Output', ln=True)

csv_file_path = "DCF CSV.csv"
df = pd.read_csv(csv_file_path)
df.rename(columns={'Unnamed: 0': 'Item'}, inplace=True)

# Format and add the DCF table
pdf.set_font('Arial', '', 9)
headers = ['AUD$m'] + [f'{year}E' for year in range(2025, 2030)]
pdf.ln(2)

page_width = 200
left_margin = 10
right_margin = 10
usable_width = page_width - left_margin - right_margin
item_col_width = 70
number_col_width = (usable_width - item_col_width) / (len(headers) - 1)
row_height = 4

pdf.set_font('Arial', 'I', 9)
pdf.cell(item_col_width, row_height, headers[0], align='L')
pdf.set_font('Arial', 'B', 9)
pdf.set_text_color(202, 164, 94)
for header in headers[1:]:
    pdf.cell(number_col_width, row_height, header, align='R')
pdf.set_text_color(0, 0, 0)
pdf.ln()

pdf.set_font('Arial', '', 9)
for i, (index, row) in enumerate(df.iterrows()):
    item_text = str(row['Item'])
    if item_text.startswith("Less:") or item_text.startswith("Add:"):
        item_text = "     " + item_text
    pdf.cell(item_col_width, row_height, item_text, align='L')
    for col_index, value in enumerate(row[1:]):
        if pd.isna(value):
            cell_value = ""
        else:
            if item_text.lower() == "shares outstanding":
                cell_value = f"{int(value):,}m"
            elif item_text.lower() == "share price":
                cell_value = f"${float(value):.2f}"
            else:
                cell_value = f"{int(value):,}"
        pdf.cell(number_col_width, row_height + 0.5, cell_value, align='R')
    pdf.ln()

# Add a new page for charts
pdf.add_page()

# Add "Stock Price Performance" heading
pdf.set_font('Arial', 'B', 16)
pdf.set_xy(10, 20)
pdf.cell(200, 10, 'Stock Price Performance', ln=True)

# Download historical stock data and create charts
ticker_hmc = 'HMC.AX'
ticker_asx200 = '^AXJO'
hmc = yf.download(ticker_hmc, start='2021-12-30', end='2025-04-27')
asx200 = yf.download(ticker_asx200, start='2021-12-30', end='2025-04-27')

price_targets = pd.read_csv('price_targets.csv')
price_targets['Date'] = pd.to_datetime(price_targets['Date'])

# Create the first chart: HMC Share Price and Analyst Price Targets
fig1, ax1 = plt.subplots(figsize=(8, 6))
ax1.plot(hmc.index, hmc['Close'], label='HMC Share Price', color='blue')  # Plot HMC share price
ax1.plot(price_targets['Date'], price_targets['Target Price'], linestyle='--', marker='o', color='black', label='Analyst Price Targets')  # Overlay analyst price targets
ax1.set_xlabel('Date')  # Label for x-axis
ax1.set_ylabel('HMC Price (AUD)', color='blue')  # Label for y-axis with color matching the line
ax1.tick_params(axis='y', labelcolor='blue')  # Match y-axis tick color to the line
ax1.set_title('HMC Share Price and Analyst Targets', pad=20)  # Add a title with padding
ax1.legend(loc='upper left')  # Place legend in the upper left corner
ax1.grid(True)  # Enable grid for better readability
ax1.xaxis.set_major_locator(plt.MaxNLocator(6))  # Limit the number of x-axis ticks for clarity
graph1_path = 'hmc_price_targets_chart.png'  # Path to save the chart
plt.savefig(graph1_path)  # Save the chart as a PNG file
plt.close()  # Close the figure to free up memory

# Create the second chart: HMC Share Price vs ASX200 Index
fig2, ax2 = plt.subplots(figsize=(8, 6))
ax2.plot(hmc.index, hmc['Close'], label='HMC Share Price', color='blue')  # Plot HMC share price
ax2.set_xlabel('Date')  # Label for x-axis
ax2.set_ylabel('HMC Price (AUD)', color='blue')  # Label for left y-axis
ax2.tick_params(axis='y', labelcolor='blue')  # Match left y-axis tick color to the line

# Add a secondary y-axis for ASX200 Index
ax3 = ax2.twinx()
ax3.plot(asx200.index, asx200['Close'], label='ASX200 Index', color='grey', linestyle='--')  # Plot ASX200 index
ax3.set_ylabel('ASX200 Index Level', color='grey')  # Label for right y-axis
ax3.tick_params(axis='y', labelcolor='grey')  # Match right y-axis tick color to the line

# Add a combined title and legend for both axes
fig2.suptitle('HMC Share Price and ASX200 Index', y=0.95)  # Title with adjusted vertical position
lines1, labels1 = ax2.get_legend_handles_labels()  # Get legend details for the first axis
lines2, labels2 = ax3.get_legend_handles_labels()  # Get legend details for the second axis
ax2.legend(lines1 + lines2, labels1 + labels2, loc='upper left')  # Combine legends and place in the upper left corner
ax2.grid(True)  # Enable grid for better readability
ax2.xaxis.set_major_locator(plt.MaxNLocator(6))  # Limit the number of x-axis ticks for clarity
graph2_path = 'hmc_asx200_chart.png'  # Path to save the chart
plt.savefig(graph2_path)  # Save the chart as a PNG file
plt.close()  # Close the figure to free up memory

# Embed the generated charts into the PDF
pdf.image(graph1_path, x=10, y=30, w=95)  # Embed the first chart on the left side of the page
pdf.image(graph2_path, x=110, y=30, w=95)  # Embed the second chart on the right side of the page

# Add small headers in the corners of the page for branding and context
pdf.set_font('Arial', '', 9)
pdf.set_xy(10, 10)  # Position for the left header
pdf.cell(0, 5, 'FINM3422 Group 90', ln=False)  # Add group name
pdf.set_xy(200 - pdf.get_string_width('HMC Capital Equity Research Report') - 10, 10)  # Position for the right header
pdf.cell(0, 5, 'HMC Capital Equity Research Report', ln=False)  # Add report title
